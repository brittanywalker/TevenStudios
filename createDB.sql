-- MySQL Script generated by MySQL Workbench
-- 08/22/17 22:51:40
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema TevenStudios
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema TevenStudios
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `TevenStudios` DEFAULT CHARACTER SET utf8 ;
USE `TevenStudios` ;

-- -----------------------------------------------------
-- Table `TevenStudios`.`Role_Types`
-- -----------------------------------------------------
DROP TABLE `TevenStudios`.`Role_Types`;

CREATE TABLE IF NOT EXISTS `TevenStudios`.`Role_Types` (
  `ID` INT NOT NULL,
  `Type` TEXT(60) NULL,
  PRIMARY KEY (`ID`),
  UNIQUE INDEX `ID_UNIQUE` (`ID` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TevenStudios`.`User`
-- -----------------------------------------------------
DROP TABLE `TevenStudios`.`User`;

CREATE TABLE IF NOT EXISTS `TevenStudios`.`User` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `Name` TEXT(60) NULL,
  `Email` VARCHAR(60) NULL,
  `StartDate` DATETIME NULL,
  `ManagerId` INT NULL,
  `RoleId` INT NULL,
  `StartBudget` DOUBLE NULL,
  `AnnualBudget` DOUBLE NULL,
  PRIMARY KEY (`ID`),
  UNIQUE INDEX `id_UNIQUE` (`ID` ASC),
  INDEX `Role_ID_idx` (`RoleId` ASC),
  INDEX `Manager_ID_idx` (`ManagerId` ASC),
  CONSTRAINT `Role_ID`
    FOREIGN KEY (`RoleId`)
    REFERENCES `TevenStudios`.`Role_Types` (`ID`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `Manager_ID`
    FOREIGN KEY (`ManagerId`)
    REFERENCES `TevenStudios`.`User` (`ID`)
    ON DELETE SET NULL
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TevenStudios`.`Status_Types`
-- -----------------------------------------------------
DROP TABLE `TevenStudios`.`Status_Types`;

CREATE TABLE IF NOT EXISTS `TevenStudios`.`Status_Types` (
  `ID` INT NOT NULL,
  `Type` TEXT(60) NULL,
  PRIMARY KEY (`ID`),
  UNIQUE INDEX `ID_UNIQUE` (`ID` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TevenStudios`.`Transactions`
-- -----------------------------------------------------
DROP TABLE `TevenStudios`.`Transactions`;

CREATE TABLE IF NOT EXISTS `TevenStudios`.`Transactions` (
  `UserId` INT NOT NULL,
  `Date` DATETIME NULL,
  `Description` LONGTEXT NULL,
  `Amount` DOUBLE NULL,
  `StatusId` INT NULL,
  `ID` INT NOT NULL AUTO_INCREMENT,
  PRIMARY KEY (`ID`),
  INDEX `User_ID_idx` (`UserId` ASC),
  INDEX `Status_ID_idx` (`StatusId` ASC),
  UNIQUE INDEX `ID_UNIQUE` (`ID` ASC),
  CONSTRAINT `User_ID`
    FOREIGN KEY (`UserId`)
    REFERENCES `TevenStudios`.`User` (`ID`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `Status_ID`
    FOREIGN KEY (`StatusId`)
    REFERENCES `TevenStudios`.`Status_Types` (`ID`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `TevenStudios`.`Role_Types`
-- -----------------------------------------------------
START TRANSACTION;
USE `TevenStudios`;
INSERT INTO `TevenStudios`.`Role_Types` (`ID`, `Type`) VALUES (0, 'Administrator') ON DUPLICATE KEY UPDATE `Type`=VALUES(`Type`);
INSERT INTO `TevenStudios`.`Role_Types` (`ID`, `Type`) VALUES (1, 'Employee') ON DUPLICATE KEY UPDATE `Type`=VALUES(`Type`);
INSERT INTO `TevenStudios`.`Role_Types` (`ID`, `Type`) VALUES (2, 'Manager') ON DUPLICATE KEY UPDATE `Type`=VALUES(`Type`);

COMMIT;


-- -----------------------------------------------------
-- Data for table `TevenStudios`.`Status_Types`
-- -----------------------------------------------------
START TRANSACTION;
USE `TevenStudios`;
INSERT INTO `TevenStudios`.`Status_Types` (`ID`, `Type`) VALUES (0, 'Pending') ON DUPLICATE KEY UPDATE `Type`=VALUES(`Type`);
INSERT INTO `TevenStudios`.`Status_Types` (`ID`, `Type`) VALUES (1, 'Approved') ON DUPLICATE KEY UPDATE `Type`=VALUES(`Type`);
INSERT INTO `TevenStudios`.`Status_Types` (`ID`, `Type`) VALUES (2, 'Denied') ON DUPLICATE KEY UPDATE `Type`=VALUES(`Type`);

COMMIT;


-- -----------------------------------------------------
-- Data for table `TevenStudios`.`Transactions`
-- -----------------------------------------------------
START TRANSACTION;
USE `TevenStudios`;
-- Create initial user ID to be associated with the pending requests
INSERT INTO `TevenStudios`.`User` (`ID`, `Name`, `Email`, `StartDate`, `RoleId`, `StartBudget`, `AnnualBudget`) VALUES (1, 'Joe Bloggs', 'joe@gmail.com', '2017-01-25 10:00:00', 1, 150.00, 3000.00) ON DUPLICATE KEY UPDATE `Name`=VALUES(`Name`), `Email`=VALUES(`Email`), `StartDate`=VALUES(`StartDate`), `RoleId`=VALUES(`RoleId`), `StartBudget`=VALUES(`StartBudget`), `AnnualBudget`=VALUES(`AnnualBudget`);

-- Create user's pending requests
INSERT INTO `TevenStudios`.`Transactions` (`UserId`, `Date`, `Description`, `Amount`, `StatusId`, `ID`) VALUES (1, '2017-08-25 10:00:00', 'Java Book', 100.54, 0, 1) ON DUPLICATE KEY UPDATE `UserId`=VALUES(`UserId`), `Date`=VALUES(`Date`), `Description`=VALUES(`Description`), `Amount`=VALUES(`Amount`), `StatusId`=VALUES(`StatusId`);
INSERT INTO `TevenStudios`.`Transactions` (`UserId`, `Date`, `Description`, `Amount`, `StatusId`, `ID`) VALUES (1, '2017-08-26 11:00:00', 'Java Conference', 86.99, 0, 2) ON DUPLICATE KEY UPDATE `UserId`=VALUES(`UserId`), `Date`=VALUES(`Date`), `Description`=VALUES(`Description`), `Amount`=VALUES(`Amount`), `StatusId`=VALUES(`StatusId`);
INSERT INTO `TevenStudios`.`Transactions` (`UserId`, `Date`, `Description`, `Amount`, `StatusId`, `ID`) VALUES (1, '2017-08-27 12:00:00', 'Something else Java', 2.00, 0, 3) ON DUPLICATE KEY UPDATE `UserId`=VALUES(`UserId`), `Date`=VALUES(`Date`), `Description`=VALUES(`Description`), `Amount`=VALUES(`Amount`), `StatusId`=VALUES(`StatusId`);

COMMIT;